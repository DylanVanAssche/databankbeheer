De informatie voor creatie van een DB vind je in volgende dir:
/u01/app/oracle/admin/erp/scripts.
1. In welk bestand vind je info over waar de redofiles op het systeem komen en
hoe groot deze gemaakt worden.

cloneDBCreation.sql


2. In welk bestand vind je info over waar de controlfiles op het systeem komen.

initerpTemp.ora

3. Noteer voor enkele oracle processen (checkpointwriter,logfilewriter en
de databasewriter )de reeds gebruikte cpu tijden.

checkpoint: oracle 13593     1  0  Sep 17  ?         1:30 ora_ckpt_erp 
logwriter: oracle 13591     1  0  Sep 17  ?         0:14 ora_lgwr_erp
databasewriter: oracle 13589     1  0  Sep 17  ?         0:23 ora_dbw0_erp 

4. Kies er nog zelf een proces uit en leg uit waarvoor dat dient.

System monitor: Zorgt ervoor dat de databank kan recoveren bij o.a. een systemcrash. Dit door het toepassen van de redo log bestanden op de databank.
Daarnaast zal de System monitor ook temporary segmenten opruimen en coalsecing van aaneensluitende vrije extends uitvoeren tot grotere extends (defragmentatie).

5. We gaan nu een paar tabellen maken met creatie.sql en de tabellen vullen met
informatie met het unix-commando ladendb geg.ctl.
Graag een verslagje van uw ervaringen met grant en revoke.
Als je @privs uitvoert merk je dat er geen rijen in de user_tab_privs tabel
zitten.

GRANTEE  OWNER TABLE_NAME    GRANTOR PRIVILEGE              TYPE
-------- ----- ------------- ------- ---------------------- -------

De tabel DOCENT van e403 bestaat voor mij niet.

Als je een tabel van iemand anders wilt raadplegen lukt dat niet zolang
de andere u geen toelating heeft gegeven.
select * from e4??.docent lukt bvb. niet.
Uw buurman moet u toelating geven om select te doen. Hij kan die
toelating alleen aan u geven of aan iedereen.
Bekijk nu de user_tab_privs tabel en zie of de select lukt.

GRANT SELECT ON docent TO e403;

GRANTEE  OWNER TABLE_NAME    GRANTOR PRIVILEGE              TYPE
-------- ----- ------------- ------- ---------------------- -------
E401     E402  DOCENT        E402    SELECT                 TABLE
E403     E402  DOCENT        E402    SELECT                 TABLE
E402     E401  DOCENT        E401    SELECT                 TABLE
E402     E403  DOCENT        E403    SELECT                 TABLE
E402     E403  DOCENT        E403    DELETE                 TABLE

Nu kan ik wel de tabel DOCENT lezen van E403.

Probeer nu bij uw buur een update op een andere tabel bvb lokaal. Vraag
eventueel de toelating indien nodig. Kan jij uw update bekijken of
heb je nog een toelating nodig.Wanneer merkt uw buur uw update?

INSERT INTO e403.docent VALUES ('PJ', 'Pieter-Jan', 'v', '11/09/2000');

Hij ziet de update niet.

Na COMMIT; ziet hij de update wel.

Probeer nu bij uw buur een delete (bvb op de practica tabel of docent tabel) uit te voeren.
Bekijk regelmatig de user_tab_privs tabel.

SQL> DELETE FROM e403.docent;      

28 rows deleted.

SQL> SELECT * from E403.docent;

no rows selected

Maar pas na COMMIT; ziet e403 dit ook!

SQL> COMMIT;

Commit complete.

Neem nu alle rechten die je aan uw buur en de rest van de wereld
hebt toegekend af zodat de user_tab_privs tabel terug leeg is.

REVOKE ALL ON docent FROM e403;

GRANTEE  OWNER TABLE_NAME    GRANTOR PRIVILEGE              TYPE
-------- ----- ------------- ------- ---------------------- -------
